---
{
   "kind": "pipeline",
   "name": "Kubernetes",
   "node_selector": {
      "drone": true
   },
   "steps": [
      {
         "commands": [ ],
         "environment": {
            "DEFAULT_WORKSPACE": "/drone/src",
            "RUN_LOCAL": "true"
         },
         "image": "github/super-linter:latest",
         "name": "Super lint",
         "pull": "always"
      },
      {
         "commands": [
            "npm install prettier",
            "npx prettier --check \"**/*.{ts,js,md,yaml,yml,sass,css,scss}\""
         ],
         "image": "node:lts",
         "name": "Prettier lint",
         "pull": "always"
      },
      {
         "commands": [
            "npm install elm-analyse elm-format",
            "npx elm-analyse",
            "npx elm-format --validate src/"
         ],
         "image": "node:lts",
         "name": "Elm lint",
         "pull": "always"
      },
      {
         "image": "banzaicloud/drone-kaniko:0.5.1",
         "name": "Build container image",
         "pull": "always",
         "trigger": {
            "event": [
               "pull_request"
            ]
         },
         "when": {
            "branch": {
               "exclude": [
                  "master"
               ]
            }
         }
      },
      {
         "image": "banzaicloud/drone-kaniko:0.5.1",
         "name": "Publish image kradalby/resume",
         "pull": "always",
         "settings": {
            "password": {
               "from_secret": "docker_password"
            },
            "repo": "kradalby/resume",
            "tags": [
               "latest",
               "${DRONE_COMMIT_SHA:0:8}"
            ],
            "username": {
               "from_secret": "docker_username"
            }
         },
         "when": {
            "branch": [
               "master"
            ],
            "event": [
               "push"
            ]
         }
      },
      {
         "commands": [
            "container-file-extractor \"kradalby/resume\" \"${DRONE_COMMIT_SHA:0:8}\" \"usr/share/nginx/html\"",
            "mkdir -p dist/",
            "mv output/usr/share/nginx/html/* dist/."
         ],
         "image": "kradalby/container-file-extractor:latest",
         "name": "Extract from container",
         "pull": "always",
         "when": {
            "branch": [
               "master"
            ],
            "event": [
               "push"
            ]
         }
      },
      {
         "image": "plugins/gh-pages",
         "name": "Publish to GitHub Pages",
         "pull": "always",
         "settings": {
            "pages_directory": "dist",
            "password": {
               "from_secret": "gh_token"
            },
            "username": {
               "from_secret": "gh_username"
            }
         },
         "when": {
            "branch": [
               "master"
            ],
            "event": [
               "push"
            ]
         }
      },
      {
         "commands": [
            "kubectl -n $APP set image deployment/$APP $APP=$REPO:${DRONE_COMMIT_SHA:0:8} --record",
            "kubectl -n $APP rollout status deployment $APP"
         ],
         "environment": {
            "APP": "resume",
            "KUBERNETES_CERT": {
               "from_secret": "kubernetes_cert"
            },
            "KUBERNETES_SERVER": {
               "from_secret": "kubernetes_server"
            },
            "KUBERNETES_TOKEN": {
               "from_secret": "kubernetes_token"
            },
            "REPO": "kradalby/resume"
         },
         "image": "kradalby/drone-kubectl",
         "name": "Deploy resume to Kubernetes",
         "pull": "always",
         "when": {
            "branch": [
               "master"
            ],
            "event": [
               "push"
            ]
         }
      },
      {
         "image": "appleboy/drone-discord",
         "name": "Notify Discord",
         "pull": "always",
         "settings": {
            "message": "{{#success build.status}}\n‚úÖ  Build #{{build.number}} of `{{repo.name}}` succeeded.\n\nüìù  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê  {{ build.link }}\n\n‚úÖ  duration: {{duration build.started build.finished}}\n‚úÖ  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n‚úÖ  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{else}}\n@everyone\n‚ùå  Build #{{build.number}} of `{{repo.name}}` failed.\n\nüìù  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\nüåê  {{ build.link }}\n\n‚úÖ  duration: {{duration build.started build.finished}}\n‚úÖ  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n‚úÖ  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{/success}}\n",
            "webhook_id": {
               "from_secret": "discord_webhook_id"
            },
            "webhook_token": {
               "from_secret": "discord_webhook_token"
            }
         },
         "when": {
            "status": [
               "success",
               "failure"
            ]
         }
      }
   ],
   "type": "kubernetes"
}
---
{
   "get": {
      "name": "id",
      "path": "discord-build"
   },
   "kind": "secret",
   "name": "discord_webhook_id"
}
---
{
   "get": {
      "name": "token",
      "path": "discord-build"
   },
   "kind": "secret",
   "name": "discord_webhook_token"
}
---
{
   "get": {
      "name": "username",
      "path": "docker"
   },
   "kind": "secret",
   "name": "docker_username"
}
---
{
   "get": {
      "name": "password",
      "path": "docker"
   },
   "kind": "secret",
   "name": "docker_password"
}
---
{
   "get": {
      "name": "username",
      "path": "gh-pages-push"
   },
   "kind": "secret",
   "name": "gh_username"
}
---
{
   "get": {
      "name": "token",
      "path": "gh-pages-push"
   },
   "kind": "secret",
   "name": "gh_token"
}
...
